{"version":3,"file":"static/js/9030.5d109c76.chunk.js","mappings":";0NAAA,MC2BaA,GAAaC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,iKA0HhB,KAAAC,YAAc,KACpBC,MAAMC,KAAKC,KAAKC,GAAGC,iBAAiB,0BAA0BC,SAC3DC,GAAUA,EAAKC,cAAgBL,KAAKK,eACtC,EAGH,KAAAC,kBAAmBC,EAAAA,EAAAA,GAAe,YAAY,IAAMP,KAAKH,kDAjHjB,uBAYtC,SAGFW,iBAAAA,GACER,KAAKH,cAoBPY,iBAAAA,GACET,KAAKH,cACLG,KAAKM,kBAAkBI,QAAQV,KAAKC,GAAI,CAAEU,WAAW,IAGvDC,iBAAAA,GACEZ,KAAKa,cAAgBb,KAAKc,mBAG5BC,oBAAAA,GACEf,KAAKM,kBAAkBU,aAGzBC,MAAAA,GACE,MAAMC,EAAalB,KAAKkB,YACtBC,EAAAA,EAAAA,GAAA,sBAAkB,OAAOC,MAAM,kBAC5BpB,KAAKkB,YAEN,KAEEG,EACJrB,KAAKa,cAAgB,GAAIM,EAAAA,EAAAA,GAAA,OAAKC,MAAM,qBAAqBE,KAAK,cAAiB,KAEjF,OACEH,EAAAA,EAAAA,GAACI,EAAAA,GAAI,CAAAC,IAAA,wDAAaxB,KAAKkB,WAAYI,KAAK,UACtCH,EAAAA,EAAAA,GAAA,OAAAK,IAAA,2CACEJ,MAAO,CACL,CAACK,EAAAA,EAAIC,YAAY,IAGlBL,EACAH,GACDC,EAAAA,EAAAA,GAAA,QAAAK,IAAA,+CAaRG,wBAAAA,CAAyBC,GACvB5B,KAAK6B,uBAAyBD,EAAME,OAAOD,uBAC3C7B,KAAK+B,sBAAwBH,EAAME,OAAOC,sBAC1C/B,KAAKgC,kCAAkCC,KAAK,CAC1CJ,uBAAwB7B,KAAK6B,uBAC7BE,sBAAuB/B,KAAK+B,wBAmCxBjB,gBAAAA,GACN,OAAOhB,MAAMoC,UAAUC,QAAQC,KAC7BpC,KAAKC,GAAGoC,cAAcnC,iBAAiB,0BACvCF,KAAKC,yJDtKc,qyCEAZwB,EAAM,CACjBC,UAAW,YACXY,cAAe,4BACfC,KAAM,qBACNC,QAAS,0BACTC,UAAW,4BACXC,YAAa,wBACbC,KAAM","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/dropdown-group/dropdown-group.scss?tag=calcite-dropdown-group&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/dropdown-group/dropdown-group.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/dropdown-item/resources.ts"],"sourcesContent":[":host {\n  // we make the host relative, so items can consistently compute their offsetTop based on the group\n  @apply block relative;\n}\n\n.container {\n  @apply text-start;\n}\n\n.dropdown-title {\n  @apply border-color-3\n  text-color-2\n  -mb-px\n  block\n  cursor-default\n  break-words\n  border-0\n  border-b\n  border-solid\n  font-bold;\n}\n\n.dropdown-separator {\n  @apply block h-px;\n  background-color: theme(\"borderColor.color.3\");\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n2h;\n  .dropdown-title {\n    @apply p-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n1h;\n  .dropdown-title {\n    @apply p-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  @apply text-0h;\n  .dropdown-title {\n    @apply p-4;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS } from \"../dropdown-item/resources\";\nimport { RequestedItem } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding `calcite-dropdown-item`s.\n */\n@Component({\n  tag: \"calcite-dropdown-group\",\n  styleUrl: \"dropdown-group.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class DropdownGroup {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies and displays a group title. */\n  @Prop({ reflect: true }) groupTitle: string;\n\n  /**\n   * Specifies the size of the component inherited from the parent `calcite-dropdown`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection, and\n   *\n   * `\"none\"` does not allow any selections.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\"none\" | \"single\" | \"multiple\", SelectionMode> =\n    \"single\";\n\n  @Watch(\"selectionMode\")\n  handlePropsChange(): void {\n    this.updateItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDropdownItemChange: EventEmitter<RequestedItem>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.updateItems();\n    this.mutationObserver?.observe(this.el, { childList: true });\n  }\n\n  componentWillLoad(): void {\n    this.groupPosition = this.getGroupPosition();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  render(): VNode {\n    const groupTitle = this.groupTitle ? (\n      <span aria-hidden=\"true\" class=\"dropdown-title\">\n        {this.groupTitle}\n      </span>\n    ) : null;\n\n    const dropdownSeparator =\n      this.groupPosition > 0 ? <div class=\"dropdown-separator\" role=\"separator\" /> : null;\n\n    return (\n      <Host aria-label={this.groupTitle} role=\"group\">\n        <div\n          class={{\n            [CSS.container]: true,\n          }}\n        >\n          {dropdownSeparator}\n          {groupTitle}\n          <slot />\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalDropdownItemSelect\")\n  updateActiveItemOnChange(event: CustomEvent): void {\n    this.requestedDropdownGroup = event.detail.requestedDropdownGroup;\n    this.requestedDropdownItem = event.detail.requestedDropdownItem;\n    this.calciteInternalDropdownItemChange.emit({\n      requestedDropdownGroup: this.requestedDropdownGroup,\n      requestedDropdownItem: this.requestedDropdownItem,\n    });\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDropdownGroupElement;\n\n  /** position of group within a dropdown */\n  private groupPosition: number;\n\n  /** the requested group */\n  private requestedDropdownGroup: HTMLCalciteDropdownGroupElement;\n\n  /** the requested item */\n  private requestedDropdownItem: HTMLCalciteDropdownItemElement;\n\n  private updateItems = (): void => {\n    Array.from(this.el.querySelectorAll(\"calcite-dropdown-item\")).forEach(\n      (item) => (item.selectionMode = this.selectionMode),\n    );\n  };\n\n  mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private getGroupPosition(): number {\n    return Array.prototype.indexOf.call(\n      this.el.parentElement.querySelectorAll(\"calcite-dropdown-group\"),\n      this.el,\n    );\n  }\n}\n","export const CSS = {\n  container: \"container\",\n  containerNone: \"container--none-selection\",\n  icon: \"dropdown-item-icon\",\n  iconEnd: \"dropdown-item-icon--end\",\n  iconStart: \"dropdown-item-icon--start\",\n  itemContent: \"dropdown-item-content\",\n  link: \"dropdown-link\",\n};\n"],"names":["DropdownGroup","proxyCustomElement","HTMLElement","updateItems","Array","from","this","el","querySelectorAll","forEach","item","selectionMode","mutationObserver","createObserver","handlePropsChange","connectedCallback","observe","childList","componentWillLoad","groupPosition","getGroupPosition","disconnectedCallback","disconnect","render","groupTitle","h","class","dropdownSeparator","role","Host","key","CSS","container","updateActiveItemOnChange","event","requestedDropdownGroup","detail","requestedDropdownItem","calciteInternalDropdownItemChange","emit","prototype","indexOf","call","parentElement","containerNone","icon","iconEnd","iconStart","itemContent","link"],"sourceRoot":""}